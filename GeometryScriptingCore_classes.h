// Class GeometryScriptingCore.GeometryScriptLibrary_CollisionFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_CollisionFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* SetStaticMeshCollisionFromMesh(struct UDynamicMesh* FromDynamicMesh, struct UStaticMesh* ToStaticMeshAsset, struct FGeometryScriptCollisionFromMeshOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_CollisionFunctions.SetStaticMeshCollisionFromMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17a1ae0
	void SetStaticMeshCollisionFromComponent(struct UStaticMesh* StaticMeshAsset, struct UPrimitiveComponent* SourceComponent, struct FGeometryScriptSetSimpleCollisionOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_CollisionFunctions.SetStaticMeshCollisionFromComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17a1990
	struct UDynamicMesh* SetDynamicMeshCollisionFromMesh(struct UDynamicMesh* FromDynamicMesh, struct UDynamicMeshComponent* ToDynamicMeshComponent, struct FGeometryScriptCollisionFromMeshOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_CollisionFunctions.SetDynamicMeshCollisionFromMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17a1800
	void ResetDynamicMeshCollision(struct UDynamicMeshComponent* Component, bool bEmitTransaction, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_CollisionFunctions.ResetDynamicMeshCollision // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17a16f0
};

// Class GeometryScriptingCore.GeometryScriptLibrary_ContainmentFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_ContainmentFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* ComputeMeshSweptHull(struct UDynamicMesh* TargetMesh, struct UDynamicMesh*& CopyToMesh, struct UDynamicMesh*& CopyToMeshOut, struct FTransform ProjectionFrame, struct FGeometryScriptSweptHullOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_ContainmentFunctions.ComputeMeshSweptHull // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x179f500
	struct UDynamicMesh* ComputeMeshConvexHull(struct UDynamicMesh* TargetMesh, struct UDynamicMesh*& CopyToMesh, struct UDynamicMesh*& CopyToMeshOut, struct FGeometryScriptConvexHullOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_ContainmentFunctions.ComputeMeshConvexHull // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179f340
};

// Class GeometryScriptingCore.GeometryScriptDebug
// Size: 0x38 (Inherited: 0x28)
struct UGeometryScriptDebug : UObject {
	struct TArray<struct FGeometryScriptDebugMessage> Messages; // 0x28(0x10)
};

// Class GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_ListUtilityFunctions : UBlueprintFunctionLibrary {

	int32_t GetVectorListLength(struct FGeometryScriptVectorList VectorList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetVectorListLength // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a0be0
	int32_t GetVectorListLastIndex(struct FGeometryScriptVectorList VectorList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetVectorListLastIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a0b00
	struct FVector GetVectorListItem(struct FGeometryScriptVectorList VectorList, int32_t Index, bool& bIsValidIndex); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetVectorListItem // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x17a1550
	int32_t GetUVListLength(struct FGeometryScriptUVList UVList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetUVListLength // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a0be0
	int32_t GetUVListLastIndex(struct FGeometryScriptUVList UVList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetUVListLastIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a0b00
	struct FVector2D GetUVListItem(struct FGeometryScriptUVList UVList, int32_t Index, bool& bIsValidIndex); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetUVListItem // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x17a13d0
	int32_t GetTriangleListLength(struct FGeometryScriptTriangleList TriangleList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetTriangleListLength // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a0be0
	int32_t GetTriangleListLastTriangle(struct FGeometryScriptTriangleList TriangleList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetTriangleListLastTriangle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a0b00
	struct FIntVector GetTriangleListItem(struct FGeometryScriptTriangleList TriangleList, int32_t Triangle, bool& bIsValidTriangle); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetTriangleListItem // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x17a1240
	int32_t GetIndexListLength(struct FGeometryScriptIndexList IndexList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetIndexListLength // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a0f30
	int32_t GetIndexListLastIndex(struct FGeometryScriptIndexList IndexList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetIndexListLastIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a0e40
	int32_t GetIndexListItem(struct FGeometryScriptIndexList IndexList, int32_t Index, bool& bIsValidIndex); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetIndexListItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17a0cc0
	int32_t GetColorListLength(struct FGeometryScriptColorList ColorList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetColorListLength // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a0be0
	int32_t GetColorListLastIndex(struct FGeometryScriptColorList ColorList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetColorListLastIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a0b00
	struct FLinearColor GetColorListItem(struct FGeometryScriptColorList ColorList, int32_t Index, bool& bIsValidIndex); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.GetColorListItem // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x17a0980
	void ConvertVectorListToArray(struct FGeometryScriptVectorList VectorList, struct TArray<struct FVector>& VectorArray); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.ConvertVectorListToArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a0340
	void ConvertUVListToArray(struct FGeometryScriptUVList UVList, struct TArray<struct FVector2D>& UVArray); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.ConvertUVListToArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a0200
	void ConvertTriangleListToArray(struct FGeometryScriptTriangleList TriangleList, struct TArray<struct FIntVector>& TriangleArray); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.ConvertTriangleListToArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a00c0
	void ConvertIndexListToArray(struct FGeometryScriptIndexList IndexList, struct TArray<int32_t>& IndexArray); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.ConvertIndexListToArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179ff70
	void ConvertColorListToArray(struct FGeometryScriptColorList ColorList, struct TArray<struct FLinearColor>& ColorArray); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.ConvertColorListToArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179fe30
	void ConvertArrayToVectorList(struct TArray<struct FVector>& VectorArray, struct FGeometryScriptVectorList& VectorList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.ConvertArrayToVectorList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179fd00
	void ConvertArrayToUVList(struct TArray<struct FVector2D>& UVArray, struct FGeometryScriptUVList& UVList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.ConvertArrayToUVList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179fbd0
	void ConvertArrayToTriangleList(struct TArray<struct FIntVector>& TriangleArray, struct FGeometryScriptTriangleList& TriangleList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.ConvertArrayToTriangleList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179faa0
	void ConvertArrayToIndexList(struct TArray<int32_t>& IndexArray, struct FGeometryScriptIndexList& IndexList, enum class EGeometryScriptIndexType IndexType); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.ConvertArrayToIndexList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179f910
	void ConvertArrayToColorList(struct TArray<struct FLinearColor>& ColorArray, struct FGeometryScriptColorList& ColorList); // Function GeometryScriptingCore.GeometryScriptLibrary_ListUtilityFunctions.ConvertArrayToColorList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179f7e0
};

// Class GeometryScriptingCore.GeometryScriptLibrary_StaticMeshFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_StaticMeshFunctions : UBlueprintFunctionLibrary {

	void GetSectionMaterialListFromStaticMesh(struct UStaticMesh* FromStaticMeshAsset, struct FGeometryScriptMeshReadLOD RequestedLOD, struct TArray<struct UMaterialInterface*>& MaterialList, struct TArray<int32_t>& MaterialIndex, enum class EGeometryScriptOutcomePins& Outcome, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_StaticMeshFunctions.GetSectionMaterialListFromStaticMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a1020
	struct UDynamicMesh* CopyMeshToStaticMesh(struct UDynamicMesh* FromDynamicMesh, struct UStaticMesh* ToStaticMeshAsset, struct FGeometryScriptCopyMeshToAssetOptions Options, struct FGeometryScriptMeshWriteLOD TargetLod, enum class EGeometryScriptOutcomePins& Outcome, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_StaticMeshFunctions.CopyMeshToStaticMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a0670
	struct UDynamicMesh* CopyMeshFromStaticMesh(struct UStaticMesh* FromStaticMeshAsset, struct UDynamicMesh* ToDynamicMesh, struct FGeometryScriptCopyMeshFromAssetOptions AssetOptions, struct FGeometryScriptMeshReadLOD RequestedLOD, enum class EGeometryScriptOutcomePins& Outcome, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_StaticMeshFunctions.CopyMeshFromStaticMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a0480
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshBasicEditFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* SetVertexPosition(struct UDynamicMesh* TargetMesh, int32_t VertexID, struct FVector NewPosition, bool& bIsValidVertex, bool bDeferChangeNotifications); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.SetVertexPosition // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17a7760
	struct UDynamicMesh* DiscardMeshAttributes(struct UDynamicMesh* TargetMesh, bool bDeferChangeNotifications); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.DiscardMeshAttributes // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17a6ce0
	struct UDynamicMesh* DeleteVerticesFromMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptIndexList VertexList, int32_t& NumDeleted, bool bDeferChangeNotifications); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.DeleteVerticesFromMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a6b30
	struct UDynamicMesh* DeleteVertexFromMesh(struct UDynamicMesh* TargetMesh, int32_t VertexID, bool& bWasVertexDeleted, bool bDeferChangeNotifications); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.DeleteVertexFromMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a69d0
	struct UDynamicMesh* DeleteTrianglesFromMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptIndexList TriangleList, int32_t& NumDeleted, bool bDeferChangeNotifications); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.DeleteTrianglesFromMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a6820
	struct UDynamicMesh* DeleteTriangleFromMesh(struct UDynamicMesh* TargetMesh, int32_t TriangleID, bool& bWasTriangleDeleted, bool bDeferChangeNotifications); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.DeleteTriangleFromMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a66c0
	struct UDynamicMesh* AppendMeshRepeated(struct UDynamicMesh* TargetMesh, struct UDynamicMesh* AppendMesh, struct FTransform AppendTransform, int32_t RepeatCount, bool bApplyTransformToFirstInstance, bool bDeferChangeNotifications, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.AppendMeshRepeated // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17a4870
	struct UDynamicMesh* AppendMesh(struct UDynamicMesh* TargetMesh, struct UDynamicMesh* AppendMesh, struct FTransform AppendTransform, bool bDeferChangeNotifications, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.AppendMesh // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17a4620
	struct UDynamicMesh* AppendBuffersToMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptSimpleMeshBuffers& Buffers, struct FGeometryScriptIndexList& NewTriangleIndicesList, int32_t MaterialID, bool bDeferChangeNotifications, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.AppendBuffersToMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a42a0
	struct UDynamicMesh* AddVerticesToMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptVectorList NewPositionsList, struct FGeometryScriptIndexList& NewIndicesList, bool bDeferChangeNotifications); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.AddVerticesToMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a4080
	struct UDynamicMesh* AddVertexToMesh(struct UDynamicMesh* TargetMesh, struct FVector NewPosition, int32_t& NewVertexIndex, bool bDeferChangeNotifications); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.AddVertexToMesh // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17a3ee0
	struct UDynamicMesh* AddTriangleToMesh(struct UDynamicMesh* TargetMesh, struct FIntVector NewTriangle, int32_t& NewTriangleIndex, int32_t NewTriangleGroupID, bool bDeferChangeNotifications, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.AddTriangleToMesh // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17a3a70
	struct UDynamicMesh* AddTrianglesToMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptTriangleList NewTrianglesList, struct FGeometryScriptIndexList& NewIndicesList, int32_t NewTriangleGroupID, bool bDeferChangeNotifications, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBasicEditFunctions.AddTrianglesToMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a3c60
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshBooleanFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshBooleanFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* ApplyMeshSelfUnion(struct UDynamicMesh* TargetMesh, struct FGeometryScriptMeshSelfUnionOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBooleanFunctions.ApplyMeshSelfUnion // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17a5fd0
	struct UDynamicMesh* ApplyMeshPlaneSlice(struct UDynamicMesh* TargetMesh, struct FTransform CutFrame, struct FGeometryScriptMeshPlaneSliceOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBooleanFunctions.ApplyMeshPlaneSlice // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17a5db0
	struct UDynamicMesh* ApplyMeshPlaneCut(struct UDynamicMesh* TargetMesh, struct FTransform CutFrame, struct FGeometryScriptMeshPlaneCutOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBooleanFunctions.ApplyMeshPlaneCut // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17a5bb0
	struct UDynamicMesh* ApplyMeshMirror(struct UDynamicMesh* TargetMesh, struct FTransform MirrorFrame, struct FGeometryScriptMeshMirrorOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBooleanFunctions.ApplyMeshMirror // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17a59a0
	struct UDynamicMesh* ApplyMeshBoolean(struct UDynamicMesh* TargetMesh, struct FTransform TargetTransform, struct UDynamicMesh* ToolMesh, struct FTransform ToolTransform, enum class EGeometryScriptBooleanOperation Operation, struct FGeometryScriptMeshBooleanOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshBooleanFunctions.ApplyMeshBoolean // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17a5620
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshComparisonFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshComparisonFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* MeasureDistancesBetweenMeshes(struct UDynamicMesh* TargetMesh, struct UDynamicMesh* OtherMesh, struct FGeometryScriptMeasureMeshDistanceOptions Options, double& MaxDistance, double& MinDistance, double& AverageDistance, double& RootMeanSqrDeviation, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshComparisonFunctions.MeasureDistancesBetweenMeshes // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a74b0
	struct UDynamicMesh* IsSameMeshAs(struct UDynamicMesh* TargetMesh, struct UDynamicMesh* OtherMesh, struct FGeometryScriptIsSameMeshOptions Options, bool& bIsSameMesh, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshComparisonFunctions.IsSameMeshAs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a72f0
	struct UDynamicMesh* IsIntersectingMesh(struct UDynamicMesh* TargetMesh, struct FTransform TargetTransform, struct UDynamicMesh* OtherMesh, struct FTransform OtherTransform, bool& bIsIntersecting, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshComparisonFunctions.IsIntersectingMesh // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17a6fc0
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshDecompositionFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshDecompositionFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* SplitMeshByPolygroups(struct UDynamicMesh* TargetMesh, struct FGeometryScriptGroupLayer GroupLayer, struct TArray<struct UDynamicMesh*>& ComponentMeshes, struct TArray<int32_t>& ComponentPolygroups, struct UDynamicMeshPool* MeshPool, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshDecompositionFunctions.SplitMeshByPolygroups // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a7c80
	struct UDynamicMesh* SplitMeshByMaterialIDs(struct UDynamicMesh* TargetMesh, struct TArray<struct UDynamicMesh*>& ComponentMeshes, struct TArray<int32_t>& ComponentMaterialIDs, struct UDynamicMeshPool* MeshPool, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshDecompositionFunctions.SplitMeshByMaterialIDs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a7ab0
	struct UDynamicMesh* SplitMeshByComponents(struct UDynamicMesh* TargetMesh, struct TArray<struct UDynamicMesh*>& ComponentMeshes, struct UDynamicMeshPool* MeshPool, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshDecompositionFunctions.SplitMeshByComponents // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a7940
	struct UDynamicMesh* GetSubMeshFromMesh(struct UDynamicMesh* TargetMesh, struct UDynamicMesh*& StoreToSubmesh, struct FGeometryScriptIndexList TriangleList, struct UDynamicMesh*& StoreToSubmeshOut, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshDecompositionFunctions.GetSubMeshFromMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a6db0
	struct UDynamicMesh* CopyMeshToMesh(struct UDynamicMesh* CopyFromMesh, struct UDynamicMesh*& CopyToMesh, struct UDynamicMesh*& CopyToMeshOut, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshDecompositionFunctions.CopyMeshToMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a6550
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshDeformFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshDeformFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* ApplyTwistWarpToMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptTwistWarpOptions Options, struct FTransform TwistOrientation, float TwistAngle, float TwistExtent, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshDeformFunctions.ApplyTwistWarpToMesh // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17a62b0
	struct UDynamicMesh* ApplyPerlinNoiseToMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPerlinNoiseOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshDeformFunctions.ApplyPerlinNoiseToMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17a6120
	struct UDynamicMesh* ApplyMathWarpToMesh(struct UDynamicMesh* TargetMesh, struct FTransform WarpOrientation, enum class EGeometryScriptMathWarpType WarpType, struct FGeometryScriptMathWarpOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshDeformFunctions.ApplyMathWarpToMesh // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17a53b0
	struct UDynamicMesh* ApplyIterativeSmoothingToMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptIterativeMeshSmoothingOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshDeformFunctions.ApplyIterativeSmoothingToMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17a52a0
	struct UDynamicMesh* ApplyFlareWarpToMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptFlareWarpOptions Options, struct FTransform FlareOrientation, float FlarePercentX, float FlarePercentY, float FlareExtent, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshDeformFunctions.ApplyFlareWarpToMesh // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17a4fb0
	struct UDynamicMesh* ApplyDisplaceFromTextureMap(struct UDynamicMesh* TargetMesh, struct UTexture2D* Texture, struct FGeometryScriptDisplaceFromTextureOptions Options, int32_t UVLayer, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshDeformFunctions.ApplyDisplaceFromTextureMap // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17a4de0
	struct UDynamicMesh* ApplyBendWarpToMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptBendWarpOptions Options, struct FTransform BendOrientation, float BendAngle, float BendExtent, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshDeformFunctions.ApplyBendWarpToMesh // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17a4b40
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshMaterialFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshMaterialFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* SetTriangleMaterialID(struct UDynamicMesh* TargetMesh, int32_t TriangleID, int32_t MaterialID, bool& bIsValidTriangle, bool bDeferChangeNotifications); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshMaterialFunctions.SetTriangleMaterialID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b0cc0
	struct UDynamicMesh* SetPolygroupMaterialID(struct UDynamicMesh* TargetMesh, struct FGeometryScriptGroupLayer GroupLayer, int32_t PolygroupID, int32_t MaterialID, bool& bIsValidPolygroupID, bool bDeferChangeNotifications, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshMaterialFunctions.SetPolygroupMaterialID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b0a90
	struct UDynamicMesh* SetAllTriangleMaterialIDs(struct UDynamicMesh* TargetMesh, struct FGeometryScriptIndexList& TriangleMaterialIDList, bool bDeferChangeNotifications, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshMaterialFunctions.SetAllTriangleMaterialIDs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b0440
	struct UDynamicMesh* RemapMaterialIDs(struct UDynamicMesh* TargetMesh, int32_t FromMaterialID, int32_t ToMaterialID, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshMaterialFunctions.RemapMaterialIDs // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b0300
	int32_t GetTriangleMaterialID(struct UDynamicMesh* TargetMesh, int32_t TriangleID, bool& bIsValidTriangle); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshMaterialFunctions.GetTriangleMaterialID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17afe00
	int32_t GetMaxMaterialID(struct UDynamicMesh* TargetMesh, bool& bHasMaterialIDs); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshMaterialFunctions.GetMaxMaterialID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17afbc0
	struct UDynamicMesh* GetAllTriangleMaterialIDs(struct UDynamicMesh* TargetMesh, struct FGeometryScriptIndexList& MaterialIDList, bool& bHasMaterialIDs); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshMaterialFunctions.GetAllTriangleMaterialIDs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17af8f0
	struct UDynamicMesh* EnableMaterialIDs(struct UDynamicMesh* TargetMesh, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshMaterialFunctions.EnableMaterialIDs // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17af680
	struct UDynamicMesh* DeleteTrianglesByMaterialID(struct UDynamicMesh* TargetMesh, int32_t MaterialID, int32_t& NumDeleted, bool bDeferChangeNotifications, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshMaterialFunctions.DeleteTrianglesByMaterialID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17af2d0
	struct UDynamicMesh* CompactMaterialIDs(struct UDynamicMesh* TargetMesh, struct TArray<struct UMaterialInterface*> SourceMaterialList, struct TArray<struct UMaterialInterface*>& CompactedMaterialList, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshMaterialFunctions.CompactMaterialIDs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17ae930
	struct UDynamicMesh* ClearMaterialIDs(struct UDynamicMesh* TargetMesh, int32_t ClearValue, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshMaterialFunctions.ClearMaterialIDs // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17ae6e0
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshModelingFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshModelingFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* ApplyMeshShell(struct UDynamicMesh* TargetMesh, struct FGeometryScriptMeshOffsetOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshModelingFunctions.ApplyMeshShell // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17ae4a0
	struct UDynamicMesh* ApplyMeshPolygroupBevel(struct UDynamicMesh* TargetMesh, struct FGeometryScriptMeshBevelOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshModelingFunctions.ApplyMeshPolygroupBevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17ae260
	struct UDynamicMesh* ApplyMeshOffset(struct UDynamicMesh* TargetMesh, struct FGeometryScriptMeshOffsetOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshModelingFunctions.ApplyMeshOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17ae0f0
	struct UDynamicMesh* ApplyMeshExtrude(struct UDynamicMesh* TargetMesh, struct FGeometryScriptMeshExtrudeOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshModelingFunctions.ApplyMeshExtrude // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17adf70
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshNormalsFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshNormalsFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* SetPerVertexNormals(struct UDynamicMesh* TargetMesh, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshNormalsFunctions.SetPerVertexNormals // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b09c0
	struct UDynamicMesh* SetPerFaceNormals(struct UDynamicMesh* TargetMesh, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshNormalsFunctions.SetPerFaceNormals // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b08f0
	struct UDynamicMesh* SetMeshTriangleNormals(struct UDynamicMesh* TargetMesh, int32_t TriangleID, struct FGeometryScriptTriangle Normals, bool& bIsValidTriangle, bool bDeferChangeNotifications); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshNormalsFunctions.SetMeshTriangleNormals // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b0600
	struct UDynamicMesh* RecomputeNormals(struct UDynamicMesh* TargetMesh, struct FGeometryScriptCalculateNormalsOptions CalculateOptions, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshNormalsFunctions.RecomputeNormals // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b0200
	struct UDynamicMesh* FlipNormals(struct UDynamicMesh* TargetMesh, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshNormalsFunctions.FlipNormals // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17af820
	struct UDynamicMesh* ComputeTangents(struct UDynamicMesh* TargetMesh, struct FGeometryScriptTangentsOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshNormalsFunctions.ComputeTangents // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17aee10
	struct UDynamicMesh* ComputeSplitNormals(struct UDynamicMesh* TargetMesh, struct FGeometryScriptSplitNormalsOptions SplitOptions, struct FGeometryScriptCalculateNormalsOptions CalculateOptions, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshNormalsFunctions.ComputeSplitNormals // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17aeca0
	struct UDynamicMesh* AutoRepairNormals(struct UDynamicMesh* TargetMesh, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshNormalsFunctions.AutoRepairNormals // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17ae610
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshPolygroupFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* SetNumExtendedPolygroupLayers(struct UDynamicMesh* TargetMesh, int32_t NumLayers, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions.SetNumExtendedPolygroupLayers // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b07f0
	struct UDynamicMesh* GetTrianglesInPolygroup(struct UDynamicMesh* TargetMesh, struct FGeometryScriptGroupLayer GroupLayer, int32_t PolygroupID, struct FGeometryScriptIndexList& TriangleIDsOut); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions.GetTrianglesInPolygroup // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b0060
	int32_t GetTrianglePolygroupID(struct UDynamicMesh* TargetMesh, struct FGeometryScriptGroupLayer GroupLayer, int32_t TriangleID, bool& bIsValidTriangle); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions.GetTrianglePolygroupID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17aff10
	struct UDynamicMesh* GetPolygroupIDsInMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptGroupLayer GroupLayer, struct FGeometryScriptIndexList& PolygroupIDsOut); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions.GetPolygroupIDsInMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17afca0
	struct UDynamicMesh* GetAllTrianglePolygroupIDs(struct UDynamicMesh* TargetMesh, struct FGeometryScriptGroupLayer GroupLayer, struct FGeometryScriptIndexList& PolygroupIDsOut); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions.GetAllTrianglePolygroupIDs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17afa60
	struct UDynamicMesh* EnablePolygroups(struct UDynamicMesh* TargetMesh, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions.EnablePolygroups // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17af750
	struct UDynamicMesh* DeleteTrianglesInPolygroup(struct UDynamicMesh* TargetMesh, struct FGeometryScriptGroupLayer GroupLayer, int32_t PolygroupID, int32_t& NumDeleted, bool bDeferChangeNotifications, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions.DeleteTrianglesInPolygroup // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17af490
	struct UDynamicMesh* CopyPolygroupsLayer(struct UDynamicMesh* TargetMesh, struct FGeometryScriptGroupLayer FromGroupLayer, struct FGeometryScriptGroupLayer ToGroupLayer, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions.CopyPolygroupsLayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17af180
	struct UDynamicMesh* ConvertUVIslandsToPolygroups(struct UDynamicMesh* TargetMesh, struct FGeometryScriptGroupLayer GroupLayer, int32_t UVLayer, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions.ConvertUVIslandsToPolygroups // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17af030
	struct UDynamicMesh* ConvertComponentsToPolygroups(struct UDynamicMesh* TargetMesh, struct FGeometryScriptGroupLayer GroupLayer, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions.ConvertComponentsToPolygroups // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17aef20
	struct UDynamicMesh* ComputePolygroupsFromAngleThreshold(struct UDynamicMesh* TargetMesh, struct FGeometryScriptGroupLayer GroupLayer, float CreaseAngle, int32_t MinGroupSize, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions.ComputePolygroupsFromAngleThreshold // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17aeb00
	struct UDynamicMesh* ClearPolygroups(struct UDynamicMesh* TargetMesh, struct FGeometryScriptGroupLayer GroupLayer, int32_t ClearValue, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPolygroupFunctions.ClearPolygroups // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17ae7e0
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshPrimitiveFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* AppendTriangulatedPolygon(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, struct TArray<struct FVector2D>& PolygonVertices, bool bAllowSelfIntersections, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendTriangulatedPolygon // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17adcb0
	struct UDynamicMesh* AppendTorus(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, struct FGeometryScriptRevolveOptions RevolveOptions, float MajorRadius, float MinorRadius, int32_t MajorSteps, int32_t MinorSteps, enum class EGeometryScriptPrimitiveOriginMode Origin, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendTorus // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17ad8c0
	struct UDynamicMesh* AppendSpiralRevolvePolygon(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, struct TArray<struct FVector2D>& PolygonVertices, struct FGeometryScriptRevolveOptions RevolveOptions, float Radius, int32_t Steps, float RisePerRevolution, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendSpiralRevolvePolygon // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17ad4f0
	struct UDynamicMesh* AppendSphereLatLong(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float Radius, int32_t StepsPhi, int32_t StepsTheta, enum class EGeometryScriptPrimitiveOriginMode Origin, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendSphereLatLong // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17ad1d0
	struct UDynamicMesh* AppendSphereBox(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float Radius, int32_t StepsX, int32_t StepsY, int32_t StepsZ, enum class EGeometryScriptPrimitiveOriginMode Origin, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendSphereBox // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17ace70
	struct UDynamicMesh* AppendSimpleSweptPolygon(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, struct TArray<struct FVector2D>& PolygonVertices, struct TArray<struct FVector>& SweepPath, bool bLoop, bool bCapped, float StartScale, float EndScale, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendSimpleSweptPolygon // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17aca70
	struct UDynamicMesh* AppendSimpleExtrudePolygon(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, struct TArray<struct FVector2D>& PolygonVertices, float Height, int32_t HeightSteps, bool bCapped, enum class EGeometryScriptPrimitiveOriginMode Origin, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendSimpleExtrudePolygon // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17ac6e0
	struct UDynamicMesh* AppendRoundRectangleXY(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float DimensionX, float DimensionY, float CornerRadius, int32_t StepsWidth, int32_t StepsHeight, int32_t StepsRound, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendRoundRectangleXY // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17abfa0
	struct UDynamicMesh* AppendRoundRectangle_Compatibility_5_1(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float DimensionX, float DimensionY, float CornerRadius, int32_t StepsWidth, int32_t StepsHeight, int32_t StepsRound, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendRoundRectangle_Compatibility_5_1 // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17ac340
	struct UDynamicMesh* AppendRevolvePolygon(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, struct TArray<struct FVector2D>& PolygonVertices, struct FGeometryScriptRevolveOptions RevolveOptions, float Radius, int32_t Steps, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendRevolvePolygon // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17abc20
	struct UDynamicMesh* AppendRevolvePath(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, struct TArray<struct FVector2D>& PathVertices, struct FGeometryScriptRevolveOptions RevolveOptions, int32_t Steps, bool bCapped, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendRevolvePath // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17ab8a0
	struct UDynamicMesh* AppendRectangleXY(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float DimensionX, float DimensionY, int32_t StepsWidth, int32_t StepsHeight, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendRectangleXY // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17ab260
	struct UDynamicMesh* AppendRectangle_Compatibility_5_1(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float DimensionX, float DimensionY, int32_t StepsWidth, int32_t StepsHeight, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendRectangle_Compatibility_5_1 // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17ab580
	struct UDynamicMesh* AppendLinearStairs(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float StepWidth, float StepHeight, float StepDepth, int32_t NumSteps, bool bFloating, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendLinearStairs // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17aaef0
	struct UDynamicMesh* AppendDisc(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float Radius, int32_t AngleSteps, int32_t SpokeSteps, float StartAngle, float EndAngle, float HoleRadius, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendDisc // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17aab50
	struct UDynamicMesh* AppendCylinder(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float Radius, float Height, int32_t RadialSteps, int32_t HeightSteps, bool bCapped, enum class EGeometryScriptPrimitiveOriginMode Origin, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendCylinder // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17aa7a0
	struct UDynamicMesh* AppendCurvedStairs(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float StepWidth, float StepHeight, float InnerRadius, float CurveAngle, int32_t NumSteps, bool bFloating, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendCurvedStairs // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17aa3f0
	struct UDynamicMesh* AppendCone(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float BaseRadius, float TopRadius, float Height, int32_t RadialSteps, int32_t HeightSteps, bool bCapped, enum class EGeometryScriptPrimitiveOriginMode Origin, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendCone // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17aa000
	struct UDynamicMesh* AppendCapsule(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float Radius, float LineLength, int32_t HemisphereSteps, int32_t CircleSteps, enum class EGeometryScriptPrimitiveOriginMode Origin, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendCapsule // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17a9ca0
	struct UDynamicMesh* AppendBox(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPrimitiveOptions PrimitiveOptions, struct FTransform Transform, float DimensionX, float DimensionY, float DimensionZ, int32_t StepsX, int32_t StepsY, int32_t StepsZ, enum class EGeometryScriptPrimitiveOriginMode Origin, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshPrimitiveFunctions.AppendBox // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17a98c0
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshQueryFunctions : UBlueprintFunctionLibrary {

	bool IsValidVertexID(struct UDynamicMesh* TargetMesh, int32_t VertexID); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.IsValidVertexID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b55a0
	bool IsValidTriangleID(struct UDynamicMesh* TargetMesh, int32_t TriangleID); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.IsValidTriangleID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b54d0
	struct FVector GetVertexPosition(struct UDynamicMesh* TargetMesh, int32_t VertexID, bool& bIsValidVertex); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetVertexPosition // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x17b4ec0
	int32_t GetVertexCount(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetVertexCount // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b4e30
	struct FBox2D GetUVSetBoundingBox(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, bool& bIsValidUVSet, bool& bUVSetIsEmpty); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetUVSetBoundingBox // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x17b4c80
	void GetTriangleUVs(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, int32_t TriangleID, struct FVector2D& UV1, struct FVector2D& UV2, struct FVector2D& UV3, bool& bHaveValidUVs); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetTriangleUVs // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x17b4a40
	void GetTrianglePositions(struct UDynamicMesh* TargetMesh, int32_t TriangleID, bool& bIsValidTriangle, struct FVector& Vertex1, struct FVector& Vertex2, struct FVector& Vertex3); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetTrianglePositions // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x17b4820
	struct FIntVector GetTriangleIndices(struct UDynamicMesh* TargetMesh, int32_t TriangleID, bool& bIsValidTriangle); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetTriangleIndices // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x17b4700
	struct FVector GetTriangleFaceNormal(struct UDynamicMesh* TargetMesh, int32_t TriangleID, bool& bIsValidTriangle); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetTriangleFaceNormal // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x17b45e0
	int32_t GetNumVertexIDs(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetNumVertexIDs // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b4550
	int32_t GetNumUVSets(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetNumUVSets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b44c0
	int32_t GetNumTriangleIDs(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetNumTriangleIDs // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b4430
	int32_t GetNumOpenBorderLoops(struct UDynamicMesh* TargetMesh, bool& bAmbiguousTopologyFound); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetNumOpenBorderLoops // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17b4350
	int32_t GetNumOpenBorderEdges(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetNumOpenBorderEdges // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b42c0
	int32_t GetNumExtendedPolygroupLayers(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetNumExtendedPolygroupLayers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b4230
	int32_t GetNumConnectedComponents(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetNumConnectedComponents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b41a0
	void GetMeshVolumeArea(struct UDynamicMesh* TargetMesh, float& SurfaceArea, float& Volume); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetMeshVolumeArea // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17b4080
	bool GetMeshHasAttributeSet(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetMeshHasAttributeSet // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b3ff0
	struct FBox GetMeshBoundingBox(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetMeshBoundingBox // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x17b3f40
	bool GetIsDenseMesh(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetIsDenseMesh // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b3eb0
	bool GetIsClosedMesh(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetIsClosedMesh // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b3e20
	bool GetHasVertexIDGaps(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetHasVertexIDGaps // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b3d90
	bool GetHasTriangleIDGaps(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetHasTriangleIDGaps // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b3d00
	bool GetHasPolygroups(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetHasPolygroups // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b3c70
	bool GetHasMaterialIDs(struct UDynamicMesh* TargetMesh); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetHasMaterialIDs // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b3be0
	struct UDynamicMesh* GetAllVertexPositions(struct UDynamicMesh* TargetMesh, struct FGeometryScriptVectorList& PositionList, bool bSkipGaps, bool& bHasVertexIDGaps); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetAllVertexPositions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b3a30
	struct UDynamicMesh* GetAllVertexIDs(struct UDynamicMesh* TargetMesh, struct FGeometryScriptIndexList& VertexIDList, bool& bHasVertexIDGaps); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetAllVertexIDs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b38c0
	struct UDynamicMesh* GetAllTriangleIndices(struct UDynamicMesh* TargetMesh, struct FGeometryScriptTriangleList& TriangleList, bool bSkipGaps, bool& bHasTriangleIDGaps); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetAllTriangleIndices // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b3710
	struct UDynamicMesh* GetAllTriangleIDs(struct UDynamicMesh* TargetMesh, struct FGeometryScriptIndexList& TriangleIDList, bool& bHasTriangleIDGaps); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshQueryFunctions.GetAllTriangleIDs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b35a0
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshRepairFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshRepairFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* WeldMeshEdges(struct UDynamicMesh* TargetMesh, struct FGeometryScriptWeldEdgesOptions WeldOptions, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshRepairFunctions.WeldMeshEdges // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b5bf0
	struct UDynamicMesh* RemoveSmallComponents(struct UDynamicMesh* TargetMesh, struct FGeometryScriptRemoveSmallComponentOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshRepairFunctions.RemoveSmallComponents // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b59b0
	struct UDynamicMesh* RemoveHiddenTriangles(struct UDynamicMesh* TargetMesh, struct FGeometryScriptRemoveHiddenTrianglesOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshRepairFunctions.RemoveHiddenTriangles // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b5870
	struct UDynamicMesh* FillAllMeshHoles(struct UDynamicMesh* TargetMesh, struct FGeometryScriptFillHolesOptions FillOptions, int32_t& NumFilledHoles, int32_t& NumFailedHoleFills, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshRepairFunctions.FillAllMeshHoles // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b2d00
	struct UDynamicMesh* CompactMesh(struct UDynamicMesh* TargetMesh, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshRepairFunctions.CompactMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b2c30
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshSimplifyFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshSimplifyFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* ApplySimplifyToVertexCount(struct UDynamicMesh* TargetMesh, int32_t vertexcount, struct FGeometryScriptSimplifyMeshOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSimplifyFunctions.ApplySimplifyToVertexCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b2930
	struct UDynamicMesh* ApplySimplifyToTriangleCount(struct UDynamicMesh* TargetMesh, int32_t TriangleCount, struct FGeometryScriptSimplifyMeshOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSimplifyFunctions.ApplySimplifyToTriangleCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b27d0
	struct UDynamicMesh* ApplySimplifyToTolerance(struct UDynamicMesh* TargetMesh, float Tolerance, struct FGeometryScriptSimplifyMeshOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSimplifyFunctions.ApplySimplifyToTolerance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b2670
	struct UDynamicMesh* ApplySimplifyToPolygroupTopology(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPolygroupSimplifyOptions Options, struct FGeometryScriptGroupLayer GroupLayer, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSimplifyFunctions.ApplySimplifyToPolygroupTopology // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b2520
	struct UDynamicMesh* ApplySimplifyToPlanar(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPlanarSimplifyOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSimplifyFunctions.ApplySimplifyToPlanar // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b2410
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshSpatial
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshSpatial : UBlueprintFunctionLibrary {

	void ResetBVH(struct FGeometryScriptDynamicMeshBVH& ResetBVH); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSpatial.ResetBVH // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b5af0
	struct UDynamicMesh* RebuildBVHForMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptDynamicMeshBVH& UpdateBVH, bool bOnlyIfInvalid, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSpatial.RebuildBVHForMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b5670
	struct UDynamicMesh* IsPointInsideMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptDynamicMeshBVH& QueryBVH, struct FVector QueryPoint, struct FGeometryScriptSpatialQueryOptions Options, bool& bIsInside, enum class EGeometryScriptContainmentOutcomePins& Outcome, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSpatial.IsPointInsideMesh // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17b51e0
	struct UDynamicMesh* IsBVHValidForMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptDynamicMeshBVH& TestBVH, bool& bIsValid, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSpatial.IsBVHValidForMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b4fe0
	struct UDynamicMesh* FindNearestRayIntersectionWithMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptDynamicMeshBVH& QueryBVH, struct FVector RayOrigin, struct FVector RayDirection, struct FGeometryScriptSpatialQueryOptions Options, struct FGeometryScriptRayHitResult& HitResult, enum class EGeometryScriptSearchOutcomePins& Outcome, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSpatial.FindNearestRayIntersectionWithMesh // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17b3200
	struct UDynamicMesh* FindNearestPointOnMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptDynamicMeshBVH& QueryBVH, struct FVector QueryPoint, struct FGeometryScriptSpatialQueryOptions Options, struct FGeometryScriptTrianglePoint& NearestResult, enum class EGeometryScriptSearchOutcomePins& Outcome, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSpatial.FindNearestPointOnMesh // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17b2ed0
	struct UDynamicMesh* BuildBVHForMesh(struct UDynamicMesh* TargetMesh, struct FGeometryScriptDynamicMeshBVH& OutputBVH, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSpatial.BuildBVHForMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b2a90
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshSubdivideFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshSubdivideFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* ApplyUniformTessellation(struct UDynamicMesh* TargetMesh, int32_t TessellationLevel, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSubdivideFunctions.ApplyUniformTessellation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b7890
	struct UDynamicMesh* ApplyRecursivePNTessellation(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPNTessellateOptions Options, int32_t NumIterations, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSubdivideFunctions.ApplyRecursivePNTessellation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b7740
	struct UDynamicMesh* ApplyPNTessellation(struct UDynamicMesh* TargetMesh, struct FGeometryScriptPNTessellateOptions Options, int32_t TessellationLevel, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshSubdivideFunctions.ApplyPNTessellation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b75f0
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshTransformFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshTransformFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* TranslateMesh(struct UDynamicMesh* TargetMesh, struct FVector Translation, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshTransformFunctions.TranslateMesh // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17b9790
	struct UDynamicMesh* TransformMesh(struct UDynamicMesh* TargetMesh, struct FTransform Transform, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshTransformFunctions.TransformMesh // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17b95e0
	struct UDynamicMesh* ScaleMesh(struct UDynamicMesh* TargetMesh, struct FVector Scale, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshTransformFunctions.ScaleMesh // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17b8560
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshUVFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* TranslateMeshUVs(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, struct FVector2D Translation, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.TranslateMeshUVs // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17b98c0
	struct UDynamicMesh* SetNumUVSets(struct UDynamicMesh* TargetMesh, int32_t NumUVSets, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.SetNumUVSets // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b94e0
	struct UDynamicMesh* SetMeshUVsFromPlanarProjection(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, struct FTransform PlaneTransform, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.SetMeshUVsFromPlanarProjection // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17b92f0
	struct UDynamicMesh* SetMeshUVsFromCylinderProjection(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, struct FTransform CylinderTransform, float SplitAngle, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.SetMeshUVsFromCylinderProjection // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17b90b0
	struct UDynamicMesh* SetMeshUVsFromBoxProjection(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, struct FTransform BoxTransform, int32_t MinIslandTriCount, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.SetMeshUVsFromBoxProjection // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17b8e80
	struct UDynamicMesh* SetMeshTriangleUVs(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, int32_t TriangleID, struct FGeometryScriptUVTriangle UVs, bool& bIsValidTriangle, bool bDeferChangeNotifications); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.SetMeshTriangleUVs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b8c80
	struct UDynamicMesh* ScaleMeshUVs(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, struct FVector2D Scale, struct FVector2D ScaleOrigin, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.ScaleMeshUVs // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17b8690
	struct UDynamicMesh* RotateMeshUVs(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, float RotationAngle, struct FVector2D RotationOrigin, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.RotateMeshUVs // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17b83a0
	struct UDynamicMesh* RepackMeshUVs(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, struct FGeometryScriptRepackUVsOptions RepackOptions, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.RepackMeshUVs // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b8250
	struct UDynamicMesh* RecomputeMeshUVs(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, struct FGeometryScriptRecomputeUVsOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.RecomputeMeshUVs // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b80e0
	struct UDynamicMesh* CopyUVSet(struct UDynamicMesh* TargetMesh, int32_t FromUVSet, int32_t ToUVSet, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.CopyUVSet // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b7f70
	struct UDynamicMesh* AutoGenerateXAtlasMeshUVs(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, struct FGeometryScriptXAtlasOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.AutoGenerateXAtlasMeshUVs // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b7b50
	struct UDynamicMesh* AutoGeneratePatchBuilderMeshUVs(struct UDynamicMesh* TargetMesh, int32_t UvSetIndex, struct FGeometryScriptPatchBuilderOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshUVFunctions.AutoGeneratePatchBuilderMeshUVs // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b7990
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshVertexColorFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshVertexColorFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* SetMeshPerVertexColors(struct UDynamicMesh* TargetMesh, struct FGeometryScriptColorList VertexColorList, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshVertexColorFunctions.SetMeshPerVertexColors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b8b10
	struct UDynamicMesh* SetMeshConstantVertexColor(struct UDynamicMesh* TargetMesh, struct FLinearColor Color, struct FGeometryScriptColorFlags Flags, bool bClearExisting, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshVertexColorFunctions.SetMeshConstantVertexColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17b8980
};

// Class GeometryScriptingCore.GeometryScriptLibrary_MeshVoxelFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_MeshVoxelFunctions : UBlueprintFunctionLibrary {

	struct UDynamicMesh* ApplyMeshSolidify(struct UDynamicMesh* TargetMesh, struct FGeometryScriptSolidifyOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshVoxelFunctions.ApplyMeshSolidify // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b74a0
	struct UDynamicMesh* ApplyMeshMorphology(struct UDynamicMesh* TargetMesh, struct FGeometryScriptMorphologyOptions Options, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_MeshVoxelFunctions.ApplyMeshMorphology // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b7340
};

// Class GeometryScriptingCore.GeometryScriptLibrary_SceneUtilityFunctions
// Size: 0x28 (Inherited: 0x28)
struct UGeometryScriptLibrary_SceneUtilityFunctions : UBlueprintFunctionLibrary {

	void SetComponentMaterialList(struct UPrimitiveComponent* Component, struct TArray<struct UMaterialInterface*>& MaterialList, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_SceneUtilityFunctions.SetComponentMaterialList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b8850
	struct UDynamicMeshPool* CreateDynamicMeshPool(); // Function GeometryScriptingCore.GeometryScriptLibrary_SceneUtilityFunctions.CreateDynamicMeshPool // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b80b0
	struct UDynamicMesh* CopyMeshFromComponent(struct USceneComponent* Component, struct UDynamicMesh* ToDynamicMesh, struct FGeometryScriptCopyMeshFromComponentOptions Options, bool bTransformToWorld, struct FTransform& LocalToWorld, enum class EGeometryScriptOutcomePins& Outcome, struct UGeometryScriptDebug* Debug); // Function GeometryScriptingCore.GeometryScriptLibrary_SceneUtilityFunctions.CopyMeshFromComponent // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17b7ca0
};

